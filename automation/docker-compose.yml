services:
  web:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ${HOME}/.config/gcloud:/root/.config/gcloud
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=automation.settings
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgresDB
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin       # 替換為你的資料庫用戶名
      POSTGRES_PASSWORD: admin # 替換為你的資料庫密碼
      POSTGRES_DB: postgresDB         # 替換為你的資料庫名稱
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data # 持久化資料
  celery:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: celery
    command: celery -A automation worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgresDB
      - POSTGRES_HOST=postgres
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: celery-beat
    command: celery -A automation beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=automation.settings
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

volumes:
  postgres_data: