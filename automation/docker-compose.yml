services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - TZ=Asia/Taipei
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgresDB
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data # 持久化資料
  celery:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: celery
    command: celery -A automation worker --loglevel=info
    environment:
      - TZ=Asia/Taipei
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgresDB
      - POSTGRES_HOST=postgres
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
  web:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: web
    command: /bin/sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - ${HOME}/.config/gcloud:/root/.config/gcloud
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - TZ=Asia/Taipei
      - DJANGO_SETTINGS_MODULE=automation.settings
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgresDB
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - TZ=Asia/Taipei
    ports:
      - "6379:6379"
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    environment:
      - TZ=Asia/Taipei
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: ./dockerfile
    container_name: celery-beat
    command: celery -A automation beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - TZ=Asia/Taipei
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=automation.settings
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

volumes:
  postgres_data: